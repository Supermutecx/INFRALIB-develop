package ro.infrasoft.infralib.ws.model;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 *
 */
@WebService(name = "ZWBGETCONTRACT", targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style")
@XmlSeeAlso({
        ObjectFactory.class
})
public interface ZWBGETCONTRACTPORT {


    /**
     *
     * @param filed2
     * @param locDescarcare
     * @param contractCp
     * @param error
     * @param perioadaDeLa
     * @param contract
     * @param anRecolta
     * @param material
     * @param tipContract
     * @param dataContract
     * @param partener
     * @param paritate
     * @param dataContractCp
     * @param perioadaLa
     * @param field1
     * @param condTransport
     * @param locIncarcare
     */
    @WebMethod(operationName = "Zwbgetcontract", action = "urn:sap-com:document:sap:soap:functions:mc-style:ZWBGETCONTRACT:ZwbgetcontractRequest")
    @RequestWrapper(localName = "Zwbgetcontract", targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style", className = "com.sap.document.sap.soap.functions.mc_style.Zwbgetcontract")
    @ResponseWrapper(localName = "ZwbgetcontractResponse", targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style", className = "com.sap.document.sap.soap.functions.mc_style.ZwbgetcontractResponse")
    public void zwbgetcontract(
            @WebParam(name = "Contract", targetNamespace = "")
            String contract,
            @WebParam(name = "AnRecolta", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> anRecolta,
            @WebParam(name = "CondTransport", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> condTransport,
            @WebParam(name = "ContractCp", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> contractCp,
            @WebParam(name = "DataContract", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<XMLGregorianCalendar> dataContract,
            @WebParam(name = "DataContractCp", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<XMLGregorianCalendar> dataContractCp,
            @WebParam(name = "Error", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> error,
            @WebParam(name = "Field1", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> field1,
            @WebParam(name = "Filed2", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> filed2,
            @WebParam(name = "LocDescarcare", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> locDescarcare,
            @WebParam(name = "LocIncarcare", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> locIncarcare,
            @WebParam(name = "Material", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> material,
            @WebParam(name = "Paritate", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> paritate,
            @WebParam(name = "Partener", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> partener,
            @WebParam(name = "PerioadaDeLa", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<XMLGregorianCalendar> perioadaDeLa,
            @WebParam(name = "PerioadaLa", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<XMLGregorianCalendar> perioadaLa,
            @WebParam(name = "TipContract", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> tipContract);

}
